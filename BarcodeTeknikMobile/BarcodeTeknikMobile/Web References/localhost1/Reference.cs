//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace BarcodeTeknikMobile.localhost1 {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    using System.Data;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="BasicHttpBinding_IService1", Namespace="http://tempuri.org/")]
    public partial class Service1 : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback GetPartNoAutoCompleteOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSiteOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRakOperationCompleted;
        
        private System.Threading.SendOrPostCallback TambahNoUrutOperationCompleted;
        
        private System.Threading.SendOrPostCallback synwoOperationCompleted;
        
        private System.Threading.SendOrPostCallback synqtyOperationCompleted;
        
        private System.Threading.SendOrPostCallback changepasswordOperationCompleted;
        
        private System.Threading.SendOrPostCallback updateWoNumberOperationCompleted;
        
        private System.Threading.SendOrPostCallback cekuserOperationCompleted;
        
        private System.Threading.SendOrPostCallback getIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback getpartOperationCompleted;
        
        private System.Threading.SendOrPostCallback getdeptOperationCompleted;
        
        private System.Threading.SendOrPostCallback uploadphotoOperationCompleted;
        
        private System.Threading.SendOrPostCallback uploadphoto2OperationCompleted;
        
        private System.Threading.SendOrPostCallback uploadphoto3OperationCompleted;
        
        private System.Threading.SendOrPostCallback deleteWoOperationCompleted;
        
        private System.Threading.SendOrPostCallback deletepemakaianOperationCompleted;
        
        private System.Threading.SendOrPostCallback deletestokcopnameOperationCompleted;
        
        private System.Threading.SendOrPostCallback closeWOOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertWOTransactionOperationCompleted;
        
        private System.Threading.SendOrPostCallback stockopnameOperationCompleted;
        
        private System.Threading.SendOrPostCallback updateqtystockopnameOperationCompleted;
        
        private System.Threading.SendOrPostCallback unissuedOperationCompleted;
        
        private System.Threading.SendOrPostCallback updatejumlahpakaiOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDataUsingDataContractOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetContractOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetOpnameOperationCompleted;
        
        private System.Threading.SendOrPostCallback ceksite1OperationCompleted;
        
        private System.Threading.SendOrPostCallback cekrak1OperationCompleted;
        
        private System.Threading.SendOrPostCallback getraknoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetOpanameitemOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public Service1() {
            this.Url = "http://192.168.6.232:94/Service1.svc";
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event GetPartNoAutoCompleteCompletedEventHandler GetPartNoAutoCompleteCompleted;
        
        /// <remarks/>
        public event GetSiteCompletedEventHandler GetSiteCompleted;
        
        /// <remarks/>
        public event GetRakCompletedEventHandler GetRakCompleted;
        
        /// <remarks/>
        public event TambahNoUrutCompletedEventHandler TambahNoUrutCompleted;
        
        /// <remarks/>
        public event synwoCompletedEventHandler synwoCompleted;
        
        /// <remarks/>
        public event synqtyCompletedEventHandler synqtyCompleted;
        
        /// <remarks/>
        public event changepasswordCompletedEventHandler changepasswordCompleted;
        
        /// <remarks/>
        public event updateWoNumberCompletedEventHandler updateWoNumberCompleted;
        
        /// <remarks/>
        public event cekuserCompletedEventHandler cekuserCompleted;
        
        /// <remarks/>
        public event getIDCompletedEventHandler getIDCompleted;
        
        /// <remarks/>
        public event getpartCompletedEventHandler getpartCompleted;
        
        /// <remarks/>
        public event getdeptCompletedEventHandler getdeptCompleted;
        
        /// <remarks/>
        public event uploadphotoCompletedEventHandler uploadphotoCompleted;
        
        /// <remarks/>
        public event uploadphoto2CompletedEventHandler uploadphoto2Completed;
        
        /// <remarks/>
        public event uploadphoto3CompletedEventHandler uploadphoto3Completed;
        
        /// <remarks/>
        public event deleteWoCompletedEventHandler deleteWoCompleted;
        
        /// <remarks/>
        public event deletepemakaianCompletedEventHandler deletepemakaianCompleted;
        
        /// <remarks/>
        public event deletestokcopnameCompletedEventHandler deletestokcopnameCompleted;
        
        /// <remarks/>
        public event closeWOCompletedEventHandler closeWOCompleted;
        
        /// <remarks/>
        public event InsertWOTransactionCompletedEventHandler InsertWOTransactionCompleted;
        
        /// <remarks/>
        public event stockopnameCompletedEventHandler stockopnameCompleted;
        
        /// <remarks/>
        public event updateqtystockopnameCompletedEventHandler updateqtystockopnameCompleted;
        
        /// <remarks/>
        public event unissuedCompletedEventHandler unissuedCompleted;
        
        /// <remarks/>
        public event updatejumlahpakaiCompletedEventHandler updatejumlahpakaiCompleted;
        
        /// <remarks/>
        public event GetDataCompletedEventHandler GetDataCompleted;
        
        /// <remarks/>
        public event GetDataUsingDataContractCompletedEventHandler GetDataUsingDataContractCompleted;
        
        /// <remarks/>
        public event GetContractCompletedEventHandler GetContractCompleted;
        
        /// <remarks/>
        public event GetOpnameCompletedEventHandler GetOpnameCompleted;
        
        /// <remarks/>
        public event ceksite1CompletedEventHandler ceksite1Completed;
        
        /// <remarks/>
        public event cekrak1CompletedEventHandler cekrak1Completed;
        
        /// <remarks/>
        public event getraknoCompletedEventHandler getraknoCompleted;
        
        /// <remarks/>
        public event GetOpanameitemCompletedEventHandler GetOpanameitemCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/GetPartNoAutoComplete", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public PartNoAutoComplete GetPartNoAutoComplete() {
            object[] results = this.Invoke("GetPartNoAutoComplete", new object[0]);
            return ((PartNoAutoComplete)(results[0]));
        }
        
        /// <remarks/>
        public void GetPartNoAutoCompleteAsync() {
            this.GetPartNoAutoCompleteAsync(null);
        }
        
        /// <remarks/>
        public void GetPartNoAutoCompleteAsync(object userState) {
            if ((this.GetPartNoAutoCompleteOperationCompleted == null)) {
                this.GetPartNoAutoCompleteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPartNoAutoCompleteOperationCompleted);
            }
            this.InvokeAsync("GetPartNoAutoComplete", new object[0], this.GetPartNoAutoCompleteOperationCompleted, userState);
        }
        
        private void OnGetPartNoAutoCompleteOperationCompleted(object arg) {
            if ((this.GetPartNoAutoCompleteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPartNoAutoCompleteCompleted(this, new GetPartNoAutoCompleteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/GetSite", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public Site GetSite() {
            object[] results = this.Invoke("GetSite", new object[0]);
            return ((Site)(results[0]));
        }
        
        /// <remarks/>
        public void GetSiteAsync() {
            this.GetSiteAsync(null);
        }
        
        /// <remarks/>
        public void GetSiteAsync(object userState) {
            if ((this.GetSiteOperationCompleted == null)) {
                this.GetSiteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSiteOperationCompleted);
            }
            this.InvokeAsync("GetSite", new object[0], this.GetSiteOperationCompleted, userState);
        }
        
        private void OnGetSiteOperationCompleted(object arg) {
            if ((this.GetSiteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSiteCompleted(this, new GetSiteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/GetRak", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public Rak GetRak() {
            object[] results = this.Invoke("GetRak", new object[0]);
            return ((Rak)(results[0]));
        }
        
        /// <remarks/>
        public void GetRakAsync() {
            this.GetRakAsync(null);
        }
        
        /// <remarks/>
        public void GetRakAsync(object userState) {
            if ((this.GetRakOperationCompleted == null)) {
                this.GetRakOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRakOperationCompleted);
            }
            this.InvokeAsync("GetRak", new object[0], this.GetRakOperationCompleted, userState);
        }
        
        private void OnGetRakOperationCompleted(object arg) {
            if ((this.GetRakCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRakCompleted(this, new GetRakCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/TambahNoUrut", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void TambahNoUrut() {
            this.Invoke("TambahNoUrut", new object[0]);
        }
        
        /// <remarks/>
        public void TambahNoUrutAsync() {
            this.TambahNoUrutAsync(null);
        }
        
        /// <remarks/>
        public void TambahNoUrutAsync(object userState) {
            if ((this.TambahNoUrutOperationCompleted == null)) {
                this.TambahNoUrutOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTambahNoUrutOperationCompleted);
            }
            this.InvokeAsync("TambahNoUrut", new object[0], this.TambahNoUrutOperationCompleted, userState);
        }
        
        private void OnTambahNoUrutOperationCompleted(object arg) {
            if ((this.TambahNoUrutCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TambahNoUrutCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/synwo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void synwo() {
            this.Invoke("synwo", new object[0]);
        }
        
        /// <remarks/>
        public void synwoAsync() {
            this.synwoAsync(null);
        }
        
        /// <remarks/>
        public void synwoAsync(object userState) {
            if ((this.synwoOperationCompleted == null)) {
                this.synwoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsynwoOperationCompleted);
            }
            this.InvokeAsync("synwo", new object[0], this.synwoOperationCompleted, userState);
        }
        
        private void OnsynwoOperationCompleted(object arg) {
            if ((this.synwoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.synwoCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/synqty", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void synqty() {
            this.Invoke("synqty", new object[0]);
        }
        
        /// <remarks/>
        public void synqtyAsync() {
            this.synqtyAsync(null);
        }
        
        /// <remarks/>
        public void synqtyAsync(object userState) {
            if ((this.synqtyOperationCompleted == null)) {
                this.synqtyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsynqtyOperationCompleted);
            }
            this.InvokeAsync("synqty", new object[0], this.synqtyOperationCompleted, userState);
        }
        
        private void OnsynqtyOperationCompleted(object arg) {
            if ((this.synqtyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.synqtyCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/changepassword", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void changepassword([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string UserId, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string oldpassword, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string NewPAssword) {
            this.Invoke("changepassword", new object[] {
                        UserId,
                        oldpassword,
                        NewPAssword});
        }
        
        /// <remarks/>
        public void changepasswordAsync(string UserId, string oldpassword, string NewPAssword) {
            this.changepasswordAsync(UserId, oldpassword, NewPAssword, null);
        }
        
        /// <remarks/>
        public void changepasswordAsync(string UserId, string oldpassword, string NewPAssword, object userState) {
            if ((this.changepasswordOperationCompleted == null)) {
                this.changepasswordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnchangepasswordOperationCompleted);
            }
            this.InvokeAsync("changepassword", new object[] {
                        UserId,
                        oldpassword,
                        NewPAssword}, this.changepasswordOperationCompleted, userState);
        }
        
        private void OnchangepasswordOperationCompleted(object arg) {
            if ((this.changepasswordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.changepasswordCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/updateWoNumber", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void updateWoNumber([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string TransactionID, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string WO) {
            this.Invoke("updateWoNumber", new object[] {
                        TransactionID,
                        WO});
        }
        
        /// <remarks/>
        public void updateWoNumberAsync(string TransactionID, string WO) {
            this.updateWoNumberAsync(TransactionID, WO, null);
        }
        
        /// <remarks/>
        public void updateWoNumberAsync(string TransactionID, string WO, object userState) {
            if ((this.updateWoNumberOperationCompleted == null)) {
                this.updateWoNumberOperationCompleted = new System.Threading.SendOrPostCallback(this.OnupdateWoNumberOperationCompleted);
            }
            this.InvokeAsync("updateWoNumber", new object[] {
                        TransactionID,
                        WO}, this.updateWoNumberOperationCompleted, userState);
        }
        
        private void OnupdateWoNumberOperationCompleted(object arg) {
            if ((this.updateWoNumberCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.updateWoNumberCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/cekuser", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public cek cekuser([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string UserId, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string password) {
            object[] results = this.Invoke("cekuser", new object[] {
                        UserId,
                        password});
            return ((cek)(results[0]));
        }
        
        /// <remarks/>
        public void cekuserAsync(string UserId, string password) {
            this.cekuserAsync(UserId, password, null);
        }
        
        /// <remarks/>
        public void cekuserAsync(string UserId, string password, object userState) {
            if ((this.cekuserOperationCompleted == null)) {
                this.cekuserOperationCompleted = new System.Threading.SendOrPostCallback(this.OncekuserOperationCompleted);
            }
            this.InvokeAsync("cekuser", new object[] {
                        UserId,
                        password}, this.cekuserOperationCompleted, userState);
        }
        
        private void OncekuserOperationCompleted(object arg) {
            if ((this.cekuserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.cekuserCompleted(this, new cekuserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/getID", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public TrxId getID() {
            object[] results = this.Invoke("getID", new object[0]);
            return ((TrxId)(results[0]));
        }
        
        /// <remarks/>
        public void getIDAsync() {
            this.getIDAsync(null);
        }
        
        /// <remarks/>
        public void getIDAsync(object userState) {
            if ((this.getIDOperationCompleted == null)) {
                this.getIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetIDOperationCompleted);
            }
            this.InvokeAsync("getID", new object[0], this.getIDOperationCompleted, userState);
        }
        
        private void OngetIDOperationCompleted(object arg) {
            if ((this.getIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getIDCompleted(this, new getIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/getpart", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public PartNo getpart([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string part) {
            object[] results = this.Invoke("getpart", new object[] {
                        part});
            return ((PartNo)(results[0]));
        }
        
        /// <remarks/>
        public void getpartAsync(string part) {
            this.getpartAsync(part, null);
        }
        
        /// <remarks/>
        public void getpartAsync(string part, object userState) {
            if ((this.getpartOperationCompleted == null)) {
                this.getpartOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetpartOperationCompleted);
            }
            this.InvokeAsync("getpart", new object[] {
                        part}, this.getpartOperationCompleted, userState);
        }
        
        private void OngetpartOperationCompleted(object arg) {
            if ((this.getpartCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getpartCompleted(this, new getpartCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/getdept", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public cek getdept([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string UserId) {
            object[] results = this.Invoke("getdept", new object[] {
                        UserId});
            return ((cek)(results[0]));
        }
        
        /// <remarks/>
        public void getdeptAsync(string UserId) {
            this.getdeptAsync(UserId, null);
        }
        
        /// <remarks/>
        public void getdeptAsync(string UserId, object userState) {
            if ((this.getdeptOperationCompleted == null)) {
                this.getdeptOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetdeptOperationCompleted);
            }
            this.InvokeAsync("getdept", new object[] {
                        UserId}, this.getdeptOperationCompleted, userState);
        }
        
        private void OngetdeptOperationCompleted(object arg) {
            if ((this.getdeptCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getdeptCompleted(this, new getdeptCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/uploadphoto", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void uploadphoto([System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary", IsNullable=true)] byte[] img, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string name) {
            this.Invoke("uploadphoto", new object[] {
                        img,
                        name});
        }
        
        /// <remarks/>
        public void uploadphotoAsync(byte[] img, string name) {
            this.uploadphotoAsync(img, name, null);
        }
        
        /// <remarks/>
        public void uploadphotoAsync(byte[] img, string name, object userState) {
            if ((this.uploadphotoOperationCompleted == null)) {
                this.uploadphotoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnuploadphotoOperationCompleted);
            }
            this.InvokeAsync("uploadphoto", new object[] {
                        img,
                        name}, this.uploadphotoOperationCompleted, userState);
        }
        
        private void OnuploadphotoOperationCompleted(object arg) {
            if ((this.uploadphotoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.uploadphotoCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/uploadphoto2", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void uploadphoto2([System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary", IsNullable=true)] byte[] img, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string name) {
            this.Invoke("uploadphoto2", new object[] {
                        img,
                        name});
        }
        
        /// <remarks/>
        public void uploadphoto2Async(byte[] img, string name) {
            this.uploadphoto2Async(img, name, null);
        }
        
        /// <remarks/>
        public void uploadphoto2Async(byte[] img, string name, object userState) {
            if ((this.uploadphoto2OperationCompleted == null)) {
                this.uploadphoto2OperationCompleted = new System.Threading.SendOrPostCallback(this.Onuploadphoto2OperationCompleted);
            }
            this.InvokeAsync("uploadphoto2", new object[] {
                        img,
                        name}, this.uploadphoto2OperationCompleted, userState);
        }
        
        private void Onuploadphoto2OperationCompleted(object arg) {
            if ((this.uploadphoto2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.uploadphoto2Completed(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/uploadphoto3", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void uploadphoto3([System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary", IsNullable=true)] byte[] img, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string name) {
            this.Invoke("uploadphoto3", new object[] {
                        img,
                        name});
        }
        
        /// <remarks/>
        public void uploadphoto3Async(byte[] img, string name) {
            this.uploadphoto3Async(img, name, null);
        }
        
        /// <remarks/>
        public void uploadphoto3Async(byte[] img, string name, object userState) {
            if ((this.uploadphoto3OperationCompleted == null)) {
                this.uploadphoto3OperationCompleted = new System.Threading.SendOrPostCallback(this.Onuploadphoto3OperationCompleted);
            }
            this.InvokeAsync("uploadphoto3", new object[] {
                        img,
                        name}, this.uploadphoto3OperationCompleted, userState);
        }
        
        private void Onuploadphoto3OperationCompleted(object arg) {
            if ((this.uploadphoto3Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.uploadphoto3Completed(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/deleteWo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void deleteWo([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string WO) {
            this.Invoke("deleteWo", new object[] {
                        WO});
        }
        
        /// <remarks/>
        public void deleteWoAsync(string WO) {
            this.deleteWoAsync(WO, null);
        }
        
        /// <remarks/>
        public void deleteWoAsync(string WO, object userState) {
            if ((this.deleteWoOperationCompleted == null)) {
                this.deleteWoOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeleteWoOperationCompleted);
            }
            this.InvokeAsync("deleteWo", new object[] {
                        WO}, this.deleteWoOperationCompleted, userState);
        }
        
        private void OndeleteWoOperationCompleted(object arg) {
            if ((this.deleteWoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deleteWoCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/deletepemakaian", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void deletepemakaian([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string WO, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string partNo, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string TransactionId, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string contract, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string RakNo) {
            this.Invoke("deletepemakaian", new object[] {
                        WO,
                        partNo,
                        TransactionId,
                        contract,
                        RakNo});
        }
        
        /// <remarks/>
        public void deletepemakaianAsync(string WO, string partNo, string TransactionId, string contract, string RakNo) {
            this.deletepemakaianAsync(WO, partNo, TransactionId, contract, RakNo, null);
        }
        
        /// <remarks/>
        public void deletepemakaianAsync(string WO, string partNo, string TransactionId, string contract, string RakNo, object userState) {
            if ((this.deletepemakaianOperationCompleted == null)) {
                this.deletepemakaianOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeletepemakaianOperationCompleted);
            }
            this.InvokeAsync("deletepemakaian", new object[] {
                        WO,
                        partNo,
                        TransactionId,
                        contract,
                        RakNo}, this.deletepemakaianOperationCompleted, userState);
        }
        
        private void OndeletepemakaianOperationCompleted(object arg) {
            if ((this.deletepemakaianCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deletepemakaianCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/deletestokcopname", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void deletestokcopname([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string partNo, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string opanamedate, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string contract) {
            this.Invoke("deletestokcopname", new object[] {
                        partNo,
                        opanamedate,
                        contract});
        }
        
        /// <remarks/>
        public void deletestokcopnameAsync(string partNo, string opanamedate, string contract) {
            this.deletestokcopnameAsync(partNo, opanamedate, contract, null);
        }
        
        /// <remarks/>
        public void deletestokcopnameAsync(string partNo, string opanamedate, string contract, object userState) {
            if ((this.deletestokcopnameOperationCompleted == null)) {
                this.deletestokcopnameOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeletestokcopnameOperationCompleted);
            }
            this.InvokeAsync("deletestokcopname", new object[] {
                        partNo,
                        opanamedate,
                        contract}, this.deletestokcopnameOperationCompleted, userState);
        }
        
        private void OndeletestokcopnameOperationCompleted(object arg) {
            if ((this.deletestokcopnameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deletestokcopnameCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/closeWO", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void closeWO([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string WO, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string TransactionId) {
            this.Invoke("closeWO", new object[] {
                        WO,
                        TransactionId});
        }
        
        /// <remarks/>
        public void closeWOAsync(string WO, string TransactionId) {
            this.closeWOAsync(WO, TransactionId, null);
        }
        
        /// <remarks/>
        public void closeWOAsync(string WO, string TransactionId, object userState) {
            if ((this.closeWOOperationCompleted == null)) {
                this.closeWOOperationCompleted = new System.Threading.SendOrPostCallback(this.OncloseWOOperationCompleted);
            }
            this.InvokeAsync("closeWO", new object[] {
                        WO,
                        TransactionId}, this.closeWOOperationCompleted, userState);
        }
        
        private void OncloseWOOperationCompleted(object arg) {
            if ((this.closeWOCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.closeWOCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/InsertWOTransaction", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void InsertWOTransaction([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string qty, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string WONo, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string contract, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string partno, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string TransactionId, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string userid, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string RakNo) {
            this.Invoke("InsertWOTransaction", new object[] {
                        qty,
                        WONo,
                        contract,
                        partno,
                        TransactionId,
                        userid,
                        RakNo});
        }
        
        /// <remarks/>
        public void InsertWOTransactionAsync(string qty, string WONo, string contract, string partno, string TransactionId, string userid, string RakNo) {
            this.InsertWOTransactionAsync(qty, WONo, contract, partno, TransactionId, userid, RakNo, null);
        }
        
        /// <remarks/>
        public void InsertWOTransactionAsync(string qty, string WONo, string contract, string partno, string TransactionId, string userid, string RakNo, object userState) {
            if ((this.InsertWOTransactionOperationCompleted == null)) {
                this.InsertWOTransactionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertWOTransactionOperationCompleted);
            }
            this.InvokeAsync("InsertWOTransaction", new object[] {
                        qty,
                        WONo,
                        contract,
                        partno,
                        TransactionId,
                        userid,
                        RakNo}, this.InsertWOTransactionOperationCompleted, userState);
        }
        
        private void OnInsertWOTransactionOperationCompleted(object arg) {
            if ((this.InsertWOTransactionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertWOTransactionCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/stockopname", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void stockopname([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string qty, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string partno, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string Contract, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string Rak_No, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string tanggal) {
            this.Invoke("stockopname", new object[] {
                        qty,
                        partno,
                        Contract,
                        Rak_No,
                        tanggal});
        }
        
        /// <remarks/>
        public void stockopnameAsync(string qty, string partno, string Contract, string Rak_No, string tanggal) {
            this.stockopnameAsync(qty, partno, Contract, Rak_No, tanggal, null);
        }
        
        /// <remarks/>
        public void stockopnameAsync(string qty, string partno, string Contract, string Rak_No, string tanggal, object userState) {
            if ((this.stockopnameOperationCompleted == null)) {
                this.stockopnameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnstockopnameOperationCompleted);
            }
            this.InvokeAsync("stockopname", new object[] {
                        qty,
                        partno,
                        Contract,
                        Rak_No,
                        tanggal}, this.stockopnameOperationCompleted, userState);
        }
        
        private void OnstockopnameOperationCompleted(object arg) {
            if ((this.stockopnameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.stockopnameCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/updateqtystockopname", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void updateqtystockopname([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string qty, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string partno, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string contract, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string opanamedate) {
            this.Invoke("updateqtystockopname", new object[] {
                        qty,
                        partno,
                        contract,
                        opanamedate});
        }
        
        /// <remarks/>
        public void updateqtystockopnameAsync(string qty, string partno, string contract, string opanamedate) {
            this.updateqtystockopnameAsync(qty, partno, contract, opanamedate, null);
        }
        
        /// <remarks/>
        public void updateqtystockopnameAsync(string qty, string partno, string contract, string opanamedate, object userState) {
            if ((this.updateqtystockopnameOperationCompleted == null)) {
                this.updateqtystockopnameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnupdateqtystockopnameOperationCompleted);
            }
            this.InvokeAsync("updateqtystockopname", new object[] {
                        qty,
                        partno,
                        contract,
                        opanamedate}, this.updateqtystockopnameOperationCompleted, userState);
        }
        
        private void OnupdateqtystockopnameOperationCompleted(object arg) {
            if ((this.updateqtystockopnameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.updateqtystockopnameCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/unissued", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void unissued([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string qty, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string WONo, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string contract, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string partno, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string TransactionId, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string RakNo) {
            this.Invoke("unissued", new object[] {
                        qty,
                        WONo,
                        contract,
                        partno,
                        TransactionId,
                        RakNo});
        }
        
        /// <remarks/>
        public void unissuedAsync(string qty, string WONo, string contract, string partno, string TransactionId, string RakNo) {
            this.unissuedAsync(qty, WONo, contract, partno, TransactionId, RakNo, null);
        }
        
        /// <remarks/>
        public void unissuedAsync(string qty, string WONo, string contract, string partno, string TransactionId, string RakNo, object userState) {
            if ((this.unissuedOperationCompleted == null)) {
                this.unissuedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnunissuedOperationCompleted);
            }
            this.InvokeAsync("unissued", new object[] {
                        qty,
                        WONo,
                        contract,
                        partno,
                        TransactionId,
                        RakNo}, this.unissuedOperationCompleted, userState);
        }
        
        private void OnunissuedOperationCompleted(object arg) {
            if ((this.unissuedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.unissuedCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/updatejumlahpakai", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void updatejumlahpakai([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string qty, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string WONo, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string contract, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string partno, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string TransactionId, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string RakNo) {
            this.Invoke("updatejumlahpakai", new object[] {
                        qty,
                        WONo,
                        contract,
                        partno,
                        TransactionId,
                        RakNo});
        }
        
        /// <remarks/>
        public void updatejumlahpakaiAsync(string qty, string WONo, string contract, string partno, string TransactionId, string RakNo) {
            this.updatejumlahpakaiAsync(qty, WONo, contract, partno, TransactionId, RakNo, null);
        }
        
        /// <remarks/>
        public void updatejumlahpakaiAsync(string qty, string WONo, string contract, string partno, string TransactionId, string RakNo, object userState) {
            if ((this.updatejumlahpakaiOperationCompleted == null)) {
                this.updatejumlahpakaiOperationCompleted = new System.Threading.SendOrPostCallback(this.OnupdatejumlahpakaiOperationCompleted);
            }
            this.InvokeAsync("updatejumlahpakai", new object[] {
                        qty,
                        WONo,
                        contract,
                        partno,
                        TransactionId,
                        RakNo}, this.updatejumlahpakaiOperationCompleted, userState);
        }
        
        private void OnupdatejumlahpakaiOperationCompleted(object arg) {
            if ((this.updatejumlahpakaiCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.updatejumlahpakaiCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/GetData", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string GetData(int value, [System.Xml.Serialization.XmlIgnoreAttribute()] bool valueSpecified) {
            object[] results = this.Invoke("GetData", new object[] {
                        value,
                        valueSpecified});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetDataAsync(int value, bool valueSpecified) {
            this.GetDataAsync(value, valueSpecified, null);
        }
        
        /// <remarks/>
        public void GetDataAsync(int value, bool valueSpecified, object userState) {
            if ((this.GetDataOperationCompleted == null)) {
                this.GetDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDataOperationCompleted);
            }
            this.InvokeAsync("GetData", new object[] {
                        value,
                        valueSpecified}, this.GetDataOperationCompleted, userState);
        }
        
        private void OnGetDataOperationCompleted(object arg) {
            if ((this.GetDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDataCompleted(this, new GetDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/GetDataUsingDataContract", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public CompositeType GetDataUsingDataContract([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] CompositeType composite) {
            object[] results = this.Invoke("GetDataUsingDataContract", new object[] {
                        composite});
            return ((CompositeType)(results[0]));
        }
        
        /// <remarks/>
        public void GetDataUsingDataContractAsync(CompositeType composite) {
            this.GetDataUsingDataContractAsync(composite, null);
        }
        
        /// <remarks/>
        public void GetDataUsingDataContractAsync(CompositeType composite, object userState) {
            if ((this.GetDataUsingDataContractOperationCompleted == null)) {
                this.GetDataUsingDataContractOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDataUsingDataContractOperationCompleted);
            }
            this.InvokeAsync("GetDataUsingDataContract", new object[] {
                        composite}, this.GetDataUsingDataContractOperationCompleted, userState);
        }
        
        private void OnGetDataUsingDataContractOperationCompleted(object arg) {
            if ((this.GetDataUsingDataContractCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDataUsingDataContractCompleted(this, new GetDataUsingDataContractCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/GetContract", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public Contract GetContract([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string wo, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string contract) {
            object[] results = this.Invoke("GetContract", new object[] {
                        wo,
                        contract});
            return ((Contract)(results[0]));
        }
        
        /// <remarks/>
        public void GetContractAsync(string wo, string contract) {
            this.GetContractAsync(wo, contract, null);
        }
        
        /// <remarks/>
        public void GetContractAsync(string wo, string contract, object userState) {
            if ((this.GetContractOperationCompleted == null)) {
                this.GetContractOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetContractOperationCompleted);
            }
            this.InvokeAsync("GetContract", new object[] {
                        wo,
                        contract}, this.GetContractOperationCompleted, userState);
        }
        
        private void OnGetContractOperationCompleted(object arg) {
            if ((this.GetContractCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetContractCompleted(this, new GetContractCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/GetOpname", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public Opname GetOpname([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string tanggal) {
            object[] results = this.Invoke("GetOpname", new object[] {
                        tanggal});
            return ((Opname)(results[0]));
        }
        
        /// <remarks/>
        public void GetOpnameAsync(string tanggal) {
            this.GetOpnameAsync(tanggal, null);
        }
        
        /// <remarks/>
        public void GetOpnameAsync(string tanggal, object userState) {
            if ((this.GetOpnameOperationCompleted == null)) {
                this.GetOpnameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetOpnameOperationCompleted);
            }
            this.InvokeAsync("GetOpname", new object[] {
                        tanggal}, this.GetOpnameOperationCompleted, userState);
        }
        
        private void OnGetOpnameOperationCompleted(object arg) {
            if ((this.GetOpnameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetOpnameCompleted(this, new GetOpnameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/ceksite1", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public cekSite ceksite1([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string site) {
            object[] results = this.Invoke("ceksite1", new object[] {
                        site});
            return ((cekSite)(results[0]));
        }
        
        /// <remarks/>
        public void ceksite1Async(string site) {
            this.ceksite1Async(site, null);
        }
        
        /// <remarks/>
        public void ceksite1Async(string site, object userState) {
            if ((this.ceksite1OperationCompleted == null)) {
                this.ceksite1OperationCompleted = new System.Threading.SendOrPostCallback(this.Onceksite1OperationCompleted);
            }
            this.InvokeAsync("ceksite1", new object[] {
                        site}, this.ceksite1OperationCompleted, userState);
        }
        
        private void Onceksite1OperationCompleted(object arg) {
            if ((this.ceksite1Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ceksite1Completed(this, new ceksite1CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/cekrak1", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public cekRak cekrak1([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string rakno) {
            object[] results = this.Invoke("cekrak1", new object[] {
                        rakno});
            return ((cekRak)(results[0]));
        }
        
        /// <remarks/>
        public void cekrak1Async(string rakno) {
            this.cekrak1Async(rakno, null);
        }
        
        /// <remarks/>
        public void cekrak1Async(string rakno, object userState) {
            if ((this.cekrak1OperationCompleted == null)) {
                this.cekrak1OperationCompleted = new System.Threading.SendOrPostCallback(this.Oncekrak1OperationCompleted);
            }
            this.InvokeAsync("cekrak1", new object[] {
                        rakno}, this.cekrak1OperationCompleted, userState);
        }
        
        private void Oncekrak1OperationCompleted(object arg) {
            if ((this.cekrak1Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.cekrak1Completed(this, new cekrak1CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/getrakno", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public rakno getrakno([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string partno) {
            object[] results = this.Invoke("getrakno", new object[] {
                        partno});
            return ((rakno)(results[0]));
        }
        
        /// <remarks/>
        public void getraknoAsync(string partno) {
            this.getraknoAsync(partno, null);
        }
        
        /// <remarks/>
        public void getraknoAsync(string partno, object userState) {
            if ((this.getraknoOperationCompleted == null)) {
                this.getraknoOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetraknoOperationCompleted);
            }
            this.InvokeAsync("getrakno", new object[] {
                        partno}, this.getraknoOperationCompleted, userState);
        }
        
        private void OngetraknoOperationCompleted(object arg) {
            if ((this.getraknoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getraknoCompleted(this, new getraknoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/GetOpanameitem", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public opanameitem GetOpanameitem([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string partno) {
            object[] results = this.Invoke("GetOpanameitem", new object[] {
                        partno});
            return ((opanameitem)(results[0]));
        }
        
        /// <remarks/>
        public void GetOpanameitemAsync(string partno) {
            this.GetOpanameitemAsync(partno, null);
        }
        
        /// <remarks/>
        public void GetOpanameitemAsync(string partno, object userState) {
            if ((this.GetOpanameitemOperationCompleted == null)) {
                this.GetOpanameitemOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetOpanameitemOperationCompleted);
            }
            this.InvokeAsync("GetOpanameitem", new object[] {
                        partno}, this.GetOpanameitemOperationCompleted, userState);
        }
        
        private void OnGetOpanameitemOperationCompleted(object arg) {
            if ((this.GetOpanameitemCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetOpanameitemCompleted(this, new GetOpanameitemCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/WebServiceBarcodeTeknik")]
    public partial class PartNoAutoComplete {
        
        private System.Data.DataTable partNoAutoCompleteTableField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Data.DataTable PartNoAutoCompleteTable {
            get {
                return this.partNoAutoCompleteTableField;
            }
            set {
                this.partNoAutoCompleteTableField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/WebServiceBarcodeTeknik")]
    public partial class opanameitem {
        
        private System.Data.DataTable opanameitemtableField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Data.DataTable opanameitemtable {
            get {
                return this.opanameitemtableField;
            }
            set {
                this.opanameitemtableField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/WebServiceBarcodeTeknik")]
    public partial class rakno {
        
        private string rakno1Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string rakno1 {
            get {
                return this.rakno1Field;
            }
            set {
                this.rakno1Field = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/WebServiceBarcodeTeknik")]
    public partial class cekRak {
        
        private int count2Field;
        
        private bool count2FieldSpecified;
        
        /// <remarks/>
        public int count2 {
            get {
                return this.count2Field;
            }
            set {
                this.count2Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool count2Specified {
            get {
                return this.count2FieldSpecified;
            }
            set {
                this.count2FieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/WebServiceBarcodeTeknik")]
    public partial class cekSite {
        
        private int count1Field;
        
        private bool count1FieldSpecified;
        
        /// <remarks/>
        public int count1 {
            get {
                return this.count1Field;
            }
            set {
                this.count1Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool count1Specified {
            get {
                return this.count1FieldSpecified;
            }
            set {
                this.count1FieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/WebServiceBarcodeTeknik")]
    public partial class Opname {
        
        private System.Data.DataTable opnameTableField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Data.DataTable OpnameTable {
            get {
                return this.opnameTableField;
            }
            set {
                this.opnameTableField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/WebServiceBarcodeTeknik")]
    public partial class Contract {
        
        private System.Data.DataTable contracTableField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Data.DataTable ContracTable {
            get {
                return this.contracTableField;
            }
            set {
                this.contracTableField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/WebServiceBarcodeTeknik")]
    public partial class CompositeType {
        
        private bool boolValueField;
        
        private bool boolValueFieldSpecified;
        
        private string stringValueField;
        
        /// <remarks/>
        public bool BoolValue {
            get {
                return this.boolValueField;
            }
            set {
                this.boolValueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool BoolValueSpecified {
            get {
                return this.boolValueFieldSpecified;
            }
            set {
                this.boolValueFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string StringValue {
            get {
                return this.stringValueField;
            }
            set {
                this.stringValueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/WebServiceBarcodeTeknik")]
    public partial class PartNo {
        
        private string partNo1Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string PartNo1 {
            get {
                return this.partNo1Field;
            }
            set {
                this.partNo1Field = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/WebServiceBarcodeTeknik")]
    public partial class TrxId {
        
        private int trxId1Field;
        
        private bool trxId1FieldSpecified;
        
        /// <remarks/>
        public int TrxId1 {
            get {
                return this.trxId1Field;
            }
            set {
                this.trxId1Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TrxId1Specified {
            get {
                return this.trxId1FieldSpecified;
            }
            set {
                this.trxId1FieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/WebServiceBarcodeTeknik")]
    public partial class cek {
        
        private int countField;
        
        private bool countFieldSpecified;
        
        private string deptField;
        
        /// <remarks/>
        public int count {
            get {
                return this.countField;
            }
            set {
                this.countField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool countSpecified {
            get {
                return this.countFieldSpecified;
            }
            set {
                this.countFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string dept {
            get {
                return this.deptField;
            }
            set {
                this.deptField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/WebServiceBarcodeTeknik")]
    public partial class Rak {
        
        private System.Data.DataTable raktableField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Data.DataTable Raktable {
            get {
                return this.raktableField;
            }
            set {
                this.raktableField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/WebServiceBarcodeTeknik")]
    public partial class Site {
        
        private System.Data.DataTable siteTableField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Data.DataTable SiteTable {
            get {
                return this.siteTableField;
            }
            set {
                this.siteTableField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetPartNoAutoCompleteCompletedEventHandler(object sender, GetPartNoAutoCompleteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPartNoAutoCompleteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPartNoAutoCompleteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PartNoAutoComplete Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PartNoAutoComplete)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetSiteCompletedEventHandler(object sender, GetSiteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSiteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSiteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Site Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Site)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetRakCompletedEventHandler(object sender, GetRakCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRakCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRakCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Rak Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Rak)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void TambahNoUrutCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void synwoCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void synqtyCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void changepasswordCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void updateWoNumberCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void cekuserCompletedEventHandler(object sender, cekuserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class cekuserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal cekuserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public cek Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((cek)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void getIDCompletedEventHandler(object sender, getIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TrxId Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TrxId)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void getpartCompletedEventHandler(object sender, getpartCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getpartCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getpartCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PartNo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PartNo)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void getdeptCompletedEventHandler(object sender, getdeptCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getdeptCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getdeptCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public cek Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((cek)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void uploadphotoCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void uploadphoto2CompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void uploadphoto3CompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void deleteWoCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void deletepemakaianCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void deletestokcopnameCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void closeWOCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void InsertWOTransactionCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void stockopnameCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void updateqtystockopnameCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void unissuedCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void updatejumlahpakaiCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetDataCompletedEventHandler(object sender, GetDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetDataUsingDataContractCompletedEventHandler(object sender, GetDataUsingDataContractCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDataUsingDataContractCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDataUsingDataContractCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CompositeType Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CompositeType)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetContractCompletedEventHandler(object sender, GetContractCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetContractCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetContractCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Contract Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Contract)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetOpnameCompletedEventHandler(object sender, GetOpnameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetOpnameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetOpnameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Opname Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Opname)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void ceksite1CompletedEventHandler(object sender, ceksite1CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ceksite1CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ceksite1CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public cekSite Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((cekSite)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void cekrak1CompletedEventHandler(object sender, cekrak1CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class cekrak1CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal cekrak1CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public cekRak Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((cekRak)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void getraknoCompletedEventHandler(object sender, getraknoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getraknoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getraknoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public rakno Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((rakno)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetOpanameitemCompletedEventHandler(object sender, GetOpanameitemCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetOpanameitemCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetOpanameitemCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public opanameitem Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((opanameitem)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591